---
# defaults file for vhub-cluster
#######################################################
# If you want that the role try to install KCLI
# dependencies (Fedora, RHEL or CentOS should be
# supported by now), set to true the following
# variable:
#######################################################
# install_depencencies: false
#######################################################
# Comment out these lines to autogenerate a pair of
# SSH both public and private keys to be used during
# cluster deployment.
#######################################################
# ssh_key:
#   filename: ~/.ssh/id_rsa_for_vhub_cluster
#   size: 2048
#######################################################
# Set the default libvirt pool to use.
# Clean mode:
# if 'also_default' is false, the default pool won't
# be removed upon running with '--tags rollback'
# if 'remove_files' is false, files that belongs to a
# pool won't be removed upon running with
# '--tags rollback'
#######################################################
libvirt:
  pool:
    name: default
    path: /var/lib/libvirt/images
    clean_mode:
      also_default: false
      remove_files: false
#######################################################
# Use the below parameters as a example.
# The comprehensive list of values can be found here:
# https://kcli.readthedocs.io/en/latest/
# KCLI Slack channel:
# https://kubernetes.slack.com/archives/CU76B52JE
#######################################################
# kcli:
#   networks:
#     - name: vhub-net
#       type: network
#       domain: example.lab
#       cidr: 172.16.33.0/24
#       secondary_cidr: fc00:52:0:1305::0/64
#       gateway: 172.16.33.1
#     - name: vhub-br-net
#       bridge: true
#       bridgename: virbr0
#     - name: vhub-macvtap-net
#       macvtap: true
#       nic: eth0
#   clusters:
#   # For example, if you want to install an openshift cluster
#   # then use only parameters that make sense for the below command:
#   # kcli create cluster openshift --paramfile=parameters.yml
#   - type: openshift
#     # kcli create cluster openshift --force --paramfile=parameters.yml
#     force_installation: false
#     parameters:
#         cluster: vhub-ocp
#         version: stable
#         tag: 4.14
#         domain: example.lab
#         pool: "{{libvirt.pool.name}}"
#         nets:
#           - vhub-net
#           - vhub-br-net
#           - vhub-macvtap-net
#         keys:
#           - "{{ssh_key.filename}}.pub"
#         # api_ip: 172.16.33.5
#         # ingress_ip: 172.16.33.6
#         ctlplanes: 3
#         workers: 0
#         memory: 16384
#         numcpus: 4
#         disk_size: 30
#         # IMPORTANT:
#         # If you decided to set you pull_secret file
#         # as base64 string using 'base64_pull_secret'
#         # parameter, it will take precedent over
#         # 'pull_secret' paramater.
#         # Note that 'base64_pull_secret' parameter is
#         # not part of KCLI
#         base64_pull_secret: null
#         pull_secret: ~/.docker/config.json
#         apps:
#           - local-storage-operator
#           - openshift-gitops-operator
#           - advanced-cluster-management
#           - topology-aware-lifecycle-manager
#######################################################
# Comment out these lines to install both 'oc' and
# 'kubectl' tools if they are not already installed
#######################################################
# oc:
#   url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz
#   dest: /usr/bin
#######################################################
# When defined, it generate dnsmasq drop-in file
# to be used along with the default dnsmasq instance
# running in the host machine
# [https://docs.fedoraproject.org/en-US/fedora-server/administration/dnsmasq/]
#######################################################
# dnsmasq:
#   use_nm_pluging: true
#   drop_in_files:
#     - path: /etc/NetworkManager/dnsmasq.d/70-{{kcli.parameters.cluster}}.conf
#       content: |
#         # /etc/NetworkManager/dnsmasq.d/70-{{kcli.parameters.cluster}}.conf
#         #
#         # This file directs dnsmasq to forward any request to resolve
#         # names under the .custom-dns.lab domain to 172.16.55.1, a
#         # custom DNS server.
#         server=/custem-dns.lab/172.16.55.1
#     - path: /etc/NetworkManager/dnsmasq.d/70-{{kcli.parameters.cluster}}.conf
#       content: |
#         # /etc/NetworkManager/dnsmasq.d/70-{{kcli.parameters.cluster}}.conf
#         #
#         # This file sets up the local lablab domain and
#         # defines some aliases and a wildcard.
#         local=/example.lab/
#         # The below defines a Wildcard DNS Entry.
#         address=/.example.lab/192.168.44.44
#         # Below I define some host names.  I also pull in
#         address=/openshift.example.lab/192.168.44.120
#         address=/openshift-int.example.lab/192.168.44.120
#######################################################
# KCLI default credentials are the below ones.
# These files are read after cluster deployment is
# done and store as ansible_facts into the following
# variables to be used by next playbooks:
#
# - kubeconfig
# - b64_kubeconfig
# - kubeadmin_password
#######################################################
k8s:
  kubeconfig: ~/.kcli/clusters/{{kcli.parameters.cluster}}/auth/kubeconfig
  kubeadmin_password: ~/.kcli/clusters/{{kcli.parameters.cluster}}/auth/kubeadmin-password
